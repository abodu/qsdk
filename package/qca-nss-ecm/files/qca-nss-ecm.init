#!/bin/sh  /etc/rc.common
#
# Copyright (c) 2014-2016 The Linux Foundation. All rights reserved.
#
# The shebang above has an extra space intentially to avoid having
# openwrt build scripts automatically enable this package starting
# at boot.

START=70

CONF_FILE=/etc/sysctl.d/qca-nss-ecm.conf

support_bridge() {
	#NSS support bridge acceleration
	[ -d /sys/kernel/debug/ecm/ecm_nss_conntrack_notifier ] && return 0
	#SFE don't support bridge acceleration
	[ -d /sys/kernel/debug/ecm/ecm_sfe_conntrack_notifier ] && return 1
}

defunct_ecm() {
	echo 1 > /sys/kernel/debug/ecm/ecm_db/defunct_all
	sleep 1;
}

stop_ecm() {
	#
	# Based on the underlying acceleration engine, gracefully
	# stop the ECM and defunct the connections.
	#
	if [ -d /sys/kernel/debug/ecm/ecm_nss_ipv4 ]; then
		echo 1 > /sys/kernel/debug/ecm/ecm_nss_ipv4/stop
		echo 1 > /sys/kernel/debug/ecm/ecm_nss_ipv6/stop

	elif [ -d /sys/kernel/debug/ecm/ecm_sfe_ipv4 ]; then
		echo 1 > /sys/kernel/debug/ecm/ecm_sfe_ipv4/stop
		echo 1 > /sys/kernel/debug/ecm/ecm_sfe_ipv6/stop
	else
		echo "WARNING: There is not any ECM frontend"
		return 1
	fi
}

enable() {
	#
	# Based on the underlying acceleration engine, gracefully
	# stop the ECM and defunct the connections.
	#
	if [ -d /sys/kernel/debug/ecm/ecm_nss_ipv4 ]; then
		echo 0 > /sys/kernel/debug/ecm/ecm_nss_ipv4/stop
		echo 0 > /sys/kernel/debug/ecm/ecm_nss_ipv6/stop

	elif [ -d /sys/kernel/debug/ecm/ecm_sfe_ipv4 ]; then
		echo 0 > /sys/kernel/debug/ecm/ecm_sfe_ipv4/stop
		echo 0 > /sys/kernel/debug/ecm/ecm_sfe_ipv6/stop
	else
		echo "WARNING: There is not any ECM frontend"
		return 1
	fi
}

disable() {
	stop_ecm
	defunct_ecm
}

load_sfe() {
	[ -d /sys/module/shortcut_fe ] || insmod shortcut-fe
	[ -d /sys/module/shortcut_fe_ipv6 ] || insmod shortcut-fe-ipv6
	[ -d /sys/module/shortcut_fe_drv ] || insmod shortcut-fe-drv
}

load_ecm() {
	[ -d /sys/module/ecm ] || {
		load_sfe
		insmod ecm
	}

	support_bridge && {
		sysctl -w net.bridge.bridge-nf-call-ip6tables=1
		sysctl -w net.bridge.bridge-nf-call-iptables=1
	}
}

unload_ecm() {
	#
	# Based on the underlying acceleration engine, gracefully
	# stop the ECM and unload the module.
	#
	if [ -d /sys/module/ecm ]; then
		disable
		rmmod ecm
		sleep 1
	fi

	sysctl -w net.bridge.bridge-nf-call-ip6tables=0
	sysctl -w net.bridge.bridge-nf-call-iptables=0
}

setopt() {
	local name=$1
	local val=$2

	grep -q "^${name}" ${CONF_FILE} && \
		sed -i "s,^${name}.*,${name}=${val}," ${CONF_FILE} || \
		echo "${name}=${val}" >> ${CONF_FILE}
}

delopt() {
	local name=$1

	sed -i "/^${name}/d" ${CONF_FILE}
}

start() {
	load_ecm

	setopt dev.nss.general.redirect 1
	support_bridge && {
		setopt net.bridge.bridge-nf-call-ip6tables 1
		setopt net.bridge.bridge-nf-call-iptables 1
	}
}

stop() {
	unload_ecm

	delopt dev.nss.general.redirect
	delopt net.bridge.bridge-nf-call-ip6tables
	delopt net.bridge.bridge-nf-call-iptables
}
