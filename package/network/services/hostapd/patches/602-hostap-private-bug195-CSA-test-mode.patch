--- a/hostapd/config_file.c
+++ b/hostapd/config_file.c
@@ -1942,6 +1942,8 @@ static int hostapd_config_fill(struct ho
 		conf->ieee80211d = atoi(pos);
 	} else if (os_strcmp(buf, "ieee80211h") == 0) {
 		conf->ieee80211h = atoi(pos);
+	} else if (os_strcmp(buf, "dfs_test_mode") == 0) {
+		conf->dfs_test_mode = atoi(pos);
 	} else if (os_strcmp(buf, "ieee8021x") == 0) {
 		bss->ieee802_1x = atoi(pos);
 	} else if (os_strcmp(buf, "eapol_version") == 0) {
--- a/src/ap/ap_config.h
+++ b/src/ap/ap_config.h
@@ -551,6 +551,7 @@ struct hostapd_config {
 	int ieee80211d;
 
 	int ieee80211h; /* DFS */
+	int dfs_test_mode;
 
 	/*
 	 * Local power constraint is an octet encoded as an unsigned integer in
--- a/src/ap/dfs.c
+++ b/src/ap/dfs.c
@@ -731,6 +731,7 @@ static int hostapd_dfs_start_channel_swi
 
 static int hostapd_dfs_start_channel_switch(struct hostapd_iface *iface)
 {
+	struct hostapd_channel_data our_channel;
 	struct hostapd_channel_data *channel;
 	int secondary_channel;
 	u8 vht_oper_centr_freq_seg0_idx;
@@ -758,6 +759,18 @@ static int hostapd_dfs_start_channel_swi
 					&vht_oper_centr_freq_seg1_idx,
 					skip_radar);
 
+	if (iface->conf->dfs_test_mode) {
+		wpa_printf(MSG_DEBUG, "DFS test mode activated, using same channel: %d\n",
+			   iface->conf->channel);
+		/* Setup the same channel */
+		channel = &our_channel;
+		channel->chan = iface->conf->channel;
+		channel->freq = iface->freq;
+		secondary_channel = iface->conf->secondary_channel;
+		vht_oper_centr_freq_seg0_idx = iface->conf->vht_oper_centr_freq_seg0_idx;
+		vht_oper_centr_freq_seg1_idx = iface->conf->vht_oper_centr_freq_seg1_idx;
+	}
+
 	if (!channel) {
 		/*
 		 * If there is no channel to switch immediately to, check if
@@ -859,6 +872,11 @@ int hostapd_dfs_radar_detected(struct ho
 			    chan_width, cf1, cf2,
 			    HOSTAPD_CHAN_DFS_UNAVAILABLE);
 
+	if (iface->conf->dfs_test_mode)
+		set_dfs_state(iface, freq, ht_enabled, chan_offset,
+			      chan_width, cf1, cf2,
+			      HOSTAPD_CHAN_DFS_AVAILABLE);
+
 	/* Skip if reported radar event not overlapped our channels */
 	res = dfs_are_channels_overlapped(iface, freq, chan_width, cf1, cf2);
 	if (!res)
