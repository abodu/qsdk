--- netifd-2015-12-16.orig/bonding.c
+++ netifd-2015-12-16/bonding.c
@@ -28,6 +28,7 @@
         BONDING_ATTR_SLAVES,
         BONDING_ATTR_MODE,
         BONDING_ATTR_XMITHASHPOL,
+        BONDING_ATTR_ENFORCESLAVESORDER,
         __BONDING_ATTR_MAX
 };
 
@@ -36,6 +37,7 @@
         [BONDING_ATTR_SLAVES] = { "slaves", BLOBMSG_TYPE_ARRAY },
         [BONDING_ATTR_MODE] = { "mode", BLOBMSG_TYPE_INT32 },
         [BONDING_ATTR_XMITHASHPOL] = { "xmit_hash_policy", BLOBMSG_TYPE_STRING },
+        [BONDING_ATTR_ENFORCESLAVESORDER] = { "enforce_slaves_order", BLOBMSG_TYPE_INT32 },
 };
 
 static const struct uci_blob_param_info bonding_attr_info[__BONDING_ATTR_MAX] = {
@@ -211,6 +213,7 @@
 {
         struct bonding_member *bm = container_of(dev, struct bonding_member, dev);
         struct bonding_state *bst = bm->bst;
+        struct bonding_member *bm_t;
 
         switch (ev) {
         case DEV_EVENT_ADD:
@@ -219,10 +222,21 @@
                 bm->present = true;
                 bst->n_present++;
 
-                if (bst->dev.active)
-                        bonding_enable_member(bm);
-                else if (bst->n_present == 1)
+                if (bst->config.enforce_slaves_order) {
+                        vlist_for_each_element(&bst->members, bm_t, node)
+                                if (!bm_t->present)
+                                        return;
+
+                        vlist_for_each_element(&bst->members, bm_t, node)
+                                bonding_enable_member(bm_t);
+
                         device_set_present(&bst->dev, true);
+                } else {
+                        if (bst->dev.active)
+                                bonding_enable_member(bm);
+                        else if (bst->n_present == 1)
+                                device_set_present(&bst->dev, true);
+                }
 
                 break;
         case DEV_EVENT_REMOVE:
@@ -455,6 +469,7 @@
 
         /* defaults */
         cfg->mode = 0;
+        cfg->enforce_slaves_order = 0;
 
         if ((cur = tb[BONDING_ATTR_MODE]))
                 cfg->mode = blobmsg_get_u32(cur);
@@ -463,6 +478,9 @@
                 memcpy(&cfg->xmit_hash_policy, blobmsg_get_string(cur),
                        sizeof(cfg->xmit_hash_policy));
         }
+
+        if ((cur = tb[BONDING_ATTR_ENFORCESLAVESORDER]))
+                cfg->enforce_slaves_order = blobmsg_get_u32(cur);
 }
 
 enum dev_change_type
--- netifd-2015-12-16.orig/system.h
+++ netifd-2015-12-16/system.h
@@ -65,6 +65,7 @@
 struct bonding_config {
 	int mode;
 	char xmit_hash_policy[16];
+	int enforce_slaves_order;
 };
 
 enum macvlan_opt {
